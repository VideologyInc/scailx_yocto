From b9bd1f242a1a66548c0c44a94553e5d247b3b604 Mon Sep 17 00:00:00 2001
From: kobus <kobus@git.com>
Date: Sun, 28 Apr 2024 22:34:28 +0200
Subject: [PATCH] don't use g_print in vpu

---
 plugins/vpu/gstvpudecobject.c | 42 +++++++++++++++++------------------
 plugins/vpu/gstvpuenc.c       | 20 ++++++++---------
 2 files changed, 31 insertions(+), 31 deletions(-)

diff --git a/plugins/vpu/gstvpudecobject.c b/plugins/vpu/gstvpudecobject.c
index 3280c6b..2a363d7 100644
--- a/plugins/vpu/gstvpudecobject.c
+++ b/plugins/vpu/gstvpudecobject.c
@@ -131,7 +131,7 @@ gst_vpu_dec_object_get_sink_caps (void)
             && map->std != VPU_V_SORENSON && map->std != VPU_V_WEBP
             && map->std != VPU_V_VP9 && map->std != VPU_V_HEVC)
           || ((vpu_fwcode & VPU_FIRMWARE_CODE_RV_FLAG) && map->std == VPU_V_RV)
-          || ((vpu_fwcode & VPU_FIRMWARE_CODE_DIVX_FLAG) 
+          || ((vpu_fwcode & VPU_FIRMWARE_CODE_DIVX_FLAG)
             && (map->std == VPU_V_DIVX3 || map->std == VPU_V_DIVX4
               || map->std == VPU_V_DIVX56)) || (IS_HANTRO()
               && (map->std == VPU_V_VP9 || map->std == VPU_V_HEVC
@@ -183,7 +183,7 @@ gst_vpu_dec_object_get_src_caps (void)
   return gst_caps_ref (caps);
 }
 
-GstVpuDecObject * 
+GstVpuDecObject *
 gst_vpu_dec_object_new(void)
 {
 	GstVpuDecObject *vpu_dec_object;
@@ -199,7 +199,7 @@ gst_vpu_dec_object_destroy (GstVpuDecObject * vpu_dec_object)
   gst_object_unref (vpu_dec_object);
 }
 
-void 
+void
 gst_vpu_dec_object_class_init(GstVpuDecObjectClass *klass)
 {
 	GObjectClass *object_class;
@@ -210,7 +210,7 @@ gst_vpu_dec_object_class_init(GstVpuDecObjectClass *klass)
 	GST_DEBUG_CATEGORY_INIT(vpu_dec_object_debug, "vpu_dec_object", 0, "VPU object");
 }
 
-void 
+void
 gst_vpu_dec_object_init(GstVpuDecObject *vpu_dec_object)
 {
   vpu_dec_object->state = STATE_NULL;
@@ -230,11 +230,11 @@ gst_vpu_dec_object_init(GstVpuDecObject *vpu_dec_object)
   vpu_dec_object->gstbuffer_in_vpudec2 = NULL;
   vpu_dec_object->system_frame_number_in_vpu = NULL;
   vpu_dec_object->dropping = FALSE;
-  vpu_dec_object->vpu_report_resolution_change = FALSE; 
+  vpu_dec_object->vpu_report_resolution_change = FALSE;
   vpu_dec_object->vpu_need_reconfig = FALSE;
 }
 
-static void 
+static void
 gst_vpu_dec_object_finalize(GObject *object)
 {
 	GstVpuDecObject *dec_object = GST_VPU_DEC_OBJECT (object);
@@ -321,11 +321,11 @@ gst_vpu_dec_object_start (GstVpuDecObject * vpu_dec_object)
         gst_vpu_dec_object_strerror(ret));
   }
 
-  g_print("====== VPUDEC: %s build on %s %s. ======\n",  (VERSION),__DATE__,__TIME__);;
-  g_print("\twrapper: %d.%d.%d (%s)\n", wrapper_version.nMajor, wrapper_version.nMinor, 
+  GST_INFO_OBJECT (vpu_dec_object, "====== VPUDEC: %s build on %s %s. ======\n",  (VERSION),__DATE__,__TIME__);;
+  GST_INFO_OBJECT (vpu_dec_object, "\twrapper: %d.%d.%d (%s)\n", wrapper_version.nMajor, wrapper_version.nMinor,
     wrapper_version.nRelease, (wrapper_version.pBinary? wrapper_version.pBinary:"unknow"));
-  g_print("\tvpulib: %d.%d.%d\n", version.nLibMajor, version.nLibMinor, version.nLibRelease);
-  g_print("\tfirmware: %d.%d.%d.%d\n", version.nFwMajor, version.nFwMinor, version.nFwRelease, version.nFwCode);
+  GST_INFO_OBJECT (vpu_dec_object, "\tvpulib: %d.%d.%d\n", version.nLibMajor, version.nLibMinor, version.nLibRelease);
+  GST_INFO_OBJECT (vpu_dec_object, "\tfirmware: %d.%d.%d.%d\n", version.nFwMajor, version.nFwMinor, version.nFwRelease, version.nFwCode);
 
   /* mem_info contains information about how to set up memory blocks
    * the VPU uses as temporary storage (they are "work buffers") */
@@ -491,7 +491,7 @@ gst_vpu_dec_object_decide_output_format (GstVpuDecObject * vpu_dec_object, \
     GstVideoDecoder * bdec)
 {
   GstCaps *peer_caps;
-  
+
   if (vpu_dec_object->output_format != AUTO) {
     switch (vpu_dec_object->output_format) {
       case NV12: vpu_dec_object->output_format_decided = GST_VIDEO_FORMAT_NV12; break;
@@ -506,7 +506,7 @@ gst_vpu_dec_object_decide_output_format (GstVpuDecObject * vpu_dec_object, \
   }
 }
 
-static gboolean 
+static gboolean
 gst_vpu_dec_object_set_vpu_param (GstVpuDecObject * vpu_dec_object, \
     GstVideoDecoder * bdec, GstVideoCodecState *state, VpuDecOpenParam *open_param)
 {
@@ -560,7 +560,7 @@ gst_vpu_dec_object_set_vpu_param (GstVpuDecObject * vpu_dec_object, \
     vpu_dec_object->is_g2 = FALSE;
   }
   gst_vpu_dec_object_decide_output_format(vpu_dec_object, bdec);
-  if (vpu_dec_object->is_mjpeg 
+  if (vpu_dec_object->is_mjpeg
       && (vpu_dec_object->output_format_decided == GST_VIDEO_FORMAT_NV12
         || vpu_dec_object->output_format_decided == GST_VIDEO_FORMAT_NV16
         || vpu_dec_object->output_format_decided == GST_VIDEO_FORMAT_NV24)) {
@@ -833,7 +833,7 @@ gst_vpu_dec_object_handle_reconfig(GstVpuDecObject * vpu_dec_object, \
                                 + vpu_dec_object->video_align.padding_right;
   vpu_dec_object->height_paded = vpu_dec_object->init_info.nPicHeight \
                               + vpu_dec_object->video_align.padding_bottom;
- 
+
   GST_DEBUG_OBJECT (vpu_dec_object, "width: %d height: %d paded width: %d paded height: %d\n", \
       vpu_dec_object->init_info.nPicWidth, vpu_dec_object->init_info.nPicHeight, \
       vpu_dec_object->width_paded, vpu_dec_object->height_paded);
@@ -951,7 +951,7 @@ gst_vpu_dec_object_process_qos (GstVpuDecObject * vpu_dec_object, \
     GstClockTimeDiff diff = gst_video_decoder_get_max_decode_time (bdec, frame);
     GST_DEBUG_OBJECT(vpu_dec_object, "diff: %lld\n", diff);
     if (diff < 0) {
-      if (vpu_dec_object->dropping == FALSE) { 
+      if (vpu_dec_object->dropping == FALSE) {
         GST_WARNING_OBJECT(vpu_dec_object, "decoder can't catch up. need drop frame.\n");
         config_param = VPU_DEC_SKIPB;
         ret = VPU_DecConfig(vpu_dec_object->handle, VPU_DEC_CONF_SKIPMODE, &config_param);
@@ -1036,7 +1036,7 @@ gst_vpu_dec_object_send_output (GstVpuDecObject * vpu_dec_object, \
       out_frame);
   if (out_frame && vpu_dec_object->frame_drop)
     gst_vpu_dec_object_process_qos (vpu_dec_object, bdec, out_frame);
- 
+
   if (drop != TRUE) {
     dec_ret = VPU_DecGetOutputFrame(vpu_dec_object->handle, &out_frame_info);
     if (dec_ret != VPU_DEC_RET_SUCCESS) {
@@ -1138,7 +1138,7 @@ gst_vpu_dec_object_send_output (GstVpuDecObject * vpu_dec_object, \
     if (gst_buffer_pool_config_has_option (config, GST_BUFFER_POOL_OPTION_VIDEO_ALIGNMENT)) {
       gst_buffer_pool_config_get_video_alignment (config, &vpu_dec_object->video_align);
 
-      GST_DEBUG_OBJECT (vpu_dec_object, "pool has alignment (%d, %d) , (%d, %d)", 
+      GST_DEBUG_OBJECT (vpu_dec_object, "pool has alignment (%d, %d) , (%d, %d)",
           vpu_dec_object->video_align.padding_left, vpu_dec_object->video_align.padding_top,
           vpu_dec_object->video_align.padding_right, vpu_dec_object->video_align.padding_bottom);
     }
@@ -1327,7 +1327,7 @@ gst_vpu_dec_object_set_vpu_input_buf (GstVpuDecObject * vpu_dec_object, \
     GST_DEBUG_OBJECT (vpu_dec_object, "vpu_dec_object received eos\n");
     vpu_buffer_node->nSize = 0;
     vpu_buffer_node->pVirAddr = (unsigned char *) 0x1;
- 
+
     return TRUE;
   }
 
@@ -1430,13 +1430,13 @@ gst_vpu_dec_object_decode (GstVpuDecObject * vpu_dec_object, \
     if (buf_ret & VPU_DEC_INIT_OK \
         || buf_ret & VPU_DEC_RESOLUTION_CHANGED) {
       if (buf_ret & VPU_DEC_RESOLUTION_CHANGED)
-        vpu_dec_object->vpu_report_resolution_change = TRUE; 
+        vpu_dec_object->vpu_report_resolution_change = TRUE;
       vpu_dec_object->vpu_need_reconfig = TRUE;
       ret = gst_vpu_dec_object_handle_reconfig(vpu_dec_object, bdec);
       /* workaround for VPU will discard decoded video frame when resolution change. */
       if (!IS_HANTRO() && !IS_AMPHION())
         gst_vpu_dec_object_clear_decoded_frame_ts (vpu_dec_object);
-      vpu_dec_object->vpu_report_resolution_change = FALSE; 
+      vpu_dec_object->vpu_report_resolution_change = FALSE;
       vpu_dec_object->vpu_need_reconfig = FALSE;
       if (ret != GST_FLOW_OK) {
         GST_ERROR_OBJECT(vpu_dec_object, "gst_vpu_dec_object_handle_reconfig fail: %s\n", \
@@ -1502,7 +1502,7 @@ gst_vpu_dec_object_decode (GstVpuDecObject * vpu_dec_object, \
     /* send EOS to VPU to force VPU output all video frame for rewind as videodecoder
      * need it. only can support skip I frame rewind.
      * only can output key frame when rewind as video decoder base will buffer output
-     * between key frame, so VPU can't get output buffer to decode and then blocked. 
+     * between key frame, so VPU can't get output buffer to decode and then blocked.
      */
 
     if (vpu_dec_object->tsm_mode == MODE_FIFO) {
diff --git a/plugins/vpu/gstvpuenc.c b/plugins/vpu/gstvpuenc.c
index 8967601..cc0aadf 100755
--- a/plugins/vpu/gstvpuenc.c
+++ b/plugins/vpu/gstvpuenc.c
@@ -189,7 +189,7 @@ static GstStaticPadTemplate static_src_template_mpeg4 = GST_STATIC_PAD_TEMPLATE(
 	GST_PAD_ALWAYS,
 	GST_STATIC_CAPS(
 		"video/mpeg, "
-		"mpegversion = (int) 4," 
+		"mpegversion = (int) 4,"
 		"systemstream = (boolean) false, "
 		"width = (int) [ 64, 1920, 8 ], "
 		"height = (int) [ 64, 1088, 8 ], "
@@ -299,7 +299,7 @@ gst_vpu_enc_class_init (GstVpuEncClass * klass)
   if (in_plugin->std == VPU_V_AVC) {
     g_object_class_install_property (gobject_class, PROP_QUANT,
         g_param_spec_int ("quant", "quant",
-          "set quant value: H.264(0-51) (-1 for automatic)", 
+          "set quant value: H.264(0-51) (-1 for automatic)",
           -1, 51, DEFAULT_QUANT, G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
   } else if (in_plugin->std == VPU_V_MPEG4) {
     g_object_class_install_property (gobject_class, PROP_QUANT,
@@ -309,7 +309,7 @@ gst_vpu_enc_class_init (GstVpuEncClass * klass)
   } else if (in_plugin->std == VPU_V_H263) {
     g_object_class_install_property (gobject_class, PROP_QUANT,
         g_param_spec_int ("quant", "quant",
-          "set quant value: H.263(1-31) (-1 for automatic)", 
+          "set quant value: H.263(1-31) (-1 for automatic)",
           -1, 31, DEFAULT_QUANT, G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
   } else if (in_plugin->std == VPU_V_VP8) {
     g_object_class_install_property (gobject_class, PROP_QUANT,
@@ -581,11 +581,11 @@ gst_vpu_enc_start (GstVideoEncoder * benc)
         gst_vpu_enc_strerror(ret));
   }
 
-  g_print("====== VPUENC: %s build on %s %s. ======\n",  (VERSION),__DATE__,__TIME__);
-  g_print("\twrapper: %d.%d.%d (%s)\n", wrapper_version.nMajor, wrapper_version.nMinor, 
+  GST_INFO_OBJECT (enc, "====== VPUENC: %s build on %s %s. ======\n",  (VERSION),__DATE__,__TIME__);
+  GST_INFO_OBJECT (enc, "\twrapper: %d.%d.%d (%s)\n", wrapper_version.nMajor, wrapper_version.nMinor,
     wrapper_version.nRelease, (wrapper_version.pBinary? wrapper_version.pBinary:"unknow"));
-  g_print("\tvpulib: %d.%d.%d\n", version.nLibMajor, version.nLibMinor, version.nLibRelease);
-  g_print("\tfirmware: %d.%d.%d.%d\n", version.nFwMajor, version.nFwMinor, version.nFwRelease, version.nFwCode);
+  GST_INFO_OBJECT (enc, "\tvpulib: %d.%d.%d\n", version.nLibMajor, version.nLibMinor, version.nLibRelease);
+  GST_INFO_OBJECT (enc, "\tfirmware: %d.%d.%d.%d\n", version.nFwMajor, version.nFwMinor, version.nFwRelease, version.nFwCode);
 
 
   /* mem_info contains information about how to set up memory blocks
@@ -730,7 +730,7 @@ no_caps:
   }
 }
 
-static gboolean 
+static gboolean
 gst_vpu_enc_decide_output_video_format (GstVideoEncoder * benc)
 {
   GstVpuEnc *enc = (GstVpuEnc *) benc;
@@ -827,7 +827,7 @@ gst_vpu_enc_set_caps (GstVideoEncoder * benc, guint8 * codec_data, gint codec_da
     }
   }
 
-  if (gstbuf != NULL) 
+  if (gstbuf != NULL)
     gst_buffer_unref (gstbuf);
 
   GST_DEBUG_OBJECT (enc, "output caps: %" GST_PTR_FORMAT, out_caps);
@@ -844,7 +844,7 @@ gst_vpu_enc_set_format (GstVideoEncoder * benc, GstVideoCodecState * state)
   GstVpuEnc *enc = (GstVpuEnc *) benc;
   const gchar *video_format_str = NULL;
   GstStructure *s;
-	
+
 	if (!gst_vpu_enc_reset (enc)) {
 		GST_ERROR_OBJECT (enc, "gst_vpu_enc_reset fail.");
 		return FALSE;

// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/*
 * Copyright (C) 2023 VideologyInc
 *
 */

#include "imx8mp-qsxp-ml81.dts"
#include <dt-bindings/phy/phy-imx8-pcie.h>

/ {
	model = "imx8mp SCAiLX with Karo based SOM.";

	aliases {
		pcie = &pcie;
		pcie_phy = &pcie_phy;
		serial3 = &uart3;

		csi0_i2c = &i2c3;
		csi1_i2c = &i2c2;
		dsi0_i2c = &i2c2;

		gpio-a-i2c = &i2c3;
		gpio-a-uart = &uart1;
		gpio-a-debug = &uart4;
		gpio-a-can = &flexcan2;
		gpio-a-spi = &ecspi2;
		gpio-a-usb = &usb3_1;
		gpio-a-usb_dwc = &usb_dwc3_1;
		gpio-a-usb_phy = &usb3_phy1;

		gpio-b-i2c = &i2c2;
		gpio-b-uart = &uart3;
		gpio-b-debug = &uart2;
		gpio-b-can = &flexcan1;
		gpio-b-spi = &ecspi1;
		gpio-b-usb = &usb3_0;
		gpio-b-usb_dwc = &usb_dwc3_0;
		gpio-b-usb_phy = &usb3_phy0;
	};

	reg_usbh_vbus: regulator-usbh-vbus {
		compatible = "regulator-fixed";
		regulator-name = "USBH-VBUS";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};

	pcie0_refclk: pcie0-refclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};

	scailx_leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_status_led>;
		scailx_status_led {
			gpios = <&gpio4 23 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
		CSI0_power {
			gpios = <&gpio_expander 10 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};
		CSI1_power {
			gpios = <&gpio_expander 13 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};
	};
};

// create second label for devices to group them to the ascociated port on the SCAILX device.
csi0_i2c: &i2c3{};
csi1_i2c: &i2c2{};
dsi0_i2c: &i2c2{};

gpio_a_i2c: &i2c3 {};
gpio_a_uart: &uart1 {};
gpio_a_debug: &uart4{};
gpio_a_can: &flexcan2{};
gpio_a_spi: &ecspi2{};
gpio_a_usb: &usb3_1{};
gpio_a_usb_dwc: &usb_dwc3_1{};
gpio_a_usb_phy: &usb3_phy1{};

gpio_b_i2c: &i2c2{};
gpio_b_uart: &uart3{};
gpio_b_debug: &uart2{};
gpio_b_can: &flexcan1{};
gpio_b_spi: &ecspi1{};
gpio_b_usb: &usb3_0{};
gpio_b_usb_dwc: &usb_dwc3_0{};
gpio_b_usb_phy: &usb3_phy0{};

&mix_gpu_ml {
	/delete-property/ memory-region;
 };

/delete-node/ &gpu_reserved;

/* reconfigure UARTS */
&uart1 {
	/* remove RTS-CTS */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	/delete-property/ uart-has-rtscts;
	status = "okay";
};
&uart3{
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	status = "okay";
};

&dsp {
	status = "okay";
};

&eqos {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&pinctrl_eqos>;
	pinctrl-1 = <&pinctrl_eqos_sleep>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	phy-supply = <&ldo5_reg>;
	status = "okay";

	mdio {
		compatible = "snps,dwmac-mdio";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_etnphy_rst_b>;
		reset-gpios = <&gpio4 22 GPIO_ACTIVE_LOW>;
		reset-delay-us = <10000>;
		reset-post-delay-us = <60000>;
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@3 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <3>;
			eee-broken-1000t;
			realtek,clkout-disable;
			micrel,force-master;
			rxd0-skew-ps = <(420 + 99)>;
			rxd1-skew-ps = <(420 + 119)>;
			rxd2-skew-ps = <(420 + 111)>;
			rxd3-skew-ps = <(420 + 129)>;
			txd0-skew-ps = <(420 + 204)>;
			txd1-skew-ps = <(420 + 178)>;
			txd2-skew-ps = <(420 + 192)>;
			txd3-skew-ps = <(420 + 151)>;
			rxdv-skew-ps = <(420 + 129)>;
			txen-skew-ps = <(420 + 150)>;
			rxc-skew-ps = <(900 + 139)>;
			txc-skew-ps = <(900 + 150)>;
		};
	};
};

&gpu_3d {
	status = "okay";
};

&gpu_2d {
	status = "okay";
};

&vpu_g1 {
	status = "okay";
};

&vpu_g2 {
	status = "okay";
};

&vpu_vc8000e {
	status = "okay";
};

// &vpu_v4l2 {
// 	status = "okay";
// };

&ml_vipsi {
	status = "okay";
};

&mix_gpu_ml {
	status = "okay";
};

&i2c3 {
	gpio_expander: gpio@27 {
		compatible = "nxp,pcal9535";
		reg = <0x27>;
		#gpio-cells = <2>;
		gpio-controller;

		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_expander_int>;
		interrupt-parent = <&gpio4>;
		interrupts = <24 IRQ_TYPE_EDGE_FALLING>;
		interrupt-controller;
		#interrupt-cells = <2>;

		gpio-line-names =
			"PWR-EN_GPIOA",
			"RST_CAM-B",
			"PCIe_PERST",
			"GPIOA-GP3",
			"PCIe_WAKE",
			"DISP-EN_DSI",
			"GPIOB-GP2",
			"PWR-EN_GPIOB",
			"ALERT_CAM-A",
			"RST_CAM-A",
			"PWR-EN_CAM-A",
			"Reserved_CAM-B",
			"ALERT_CAM-B",
			"PWR-EN_CAM-B",
			"Reserved_CAM-A",
			"";
	};

	/* RTC */
	rv3028: rtc@52 	{
		compatible = "microcrystal,rv3028";
		reg = <0x52>;
		trickle-resistor-ohms = <5000>;
	};

	/* System power sensor */
	syspow: ina231@45 {
		compatible = "ti,ina231";
		reg = <0x45>;
		shunt-resistor = <10000>;
	};
};

&i2c4 {
	status = "disabled";
};

&pcie {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie>;
	reset-gpio = <&gpio_expander 2 GPIO_ACTIVE_LOW>;
	ext_osc = <1>;
	clocks = <&clk IMX8MP_CLK_HSIO_ROOT>,
		<&clk IMX8MP_CLK_PCIE_ROOT>,
		<&clk IMX8MP_CLK_HSIO_AXI>;
	clock-names = "pcie", "pcie_aux", "pcie_bus";
	assigned-clocks = <&clk IMX8MP_CLK_PCIE_AUX>;
	assigned-clock-rates = <10000000>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL2_50M>;
	status = "okay";

	wifi_wake_host {
		compatible = "nxp,wifi-wake-host";
		interrupt-parent = <&gpio_expander>;
		interrupts = <4 IRQ_TYPE_LEVEL_LOW>;
		interrupt-names = "host-wake";
	};
};

&pcie_phy {
	fsl,refclk-pad-mode = <IMX8_PCIE_REFCLK_PAD_INPUT>;
	fsl,clkreq-unsupported;
	clocks = <&pcie0_refclk>;
	clock-names = "ref";
	status = "okay";
};

&reg_vdd_soc {
	/* PCIe requires a minimum vdd soc voltage of 0.805V */
	regulator-min-microvolt = <805000>;
};

&usdhc2 {
	status = "okay";
};

&ecspi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1>;
	spi-max-frequency = <20000000>;
	cs-gpios = <&gpio5 9 GPIO_ACTIVE_LOW>;
	status = "disabled";
};

&ecspi2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	spi-max-frequency = <20000000>;
	cs-gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
	status = "disabled";
};


// imx8m PIN MUX REGISTERS:
//   |---|---|---|---| # |---|---|---|---| # |---|---|---|SION| # |---|MUX|MUX|MUX|
//     IOMUXC_MUX_SION_ENABLED     0x40000000  // enable software read of pin state irrespective of mux function.

// imx8m PIN PAD CTRL REGISTERS:
//   |---|---|---|---| # |---|---|---|PE | # |HYS|PUE|ODE|SLR| # |slr?|DSE|DSE|dse?|
// hysteresis - Schmitt-trigger enable or regular CMOS
//     IOMUXC_PAD_HYS_ENABLED      0x00000080
// Pull-up/down     (when enabled, approx 27k PU, or 100k PD)
//     IOMUXC_PAD_PULL_ENABLED     0x00000100
//     IOMUXC_PAD_PULL_PUE         0x00000040  // 0x40 -s PU, 0 is PD if PE is on
//     IOMUXC_PAD_ODE_ENABLED      0x00000020
// Slew-rate control
//     IOMUXC_PAD_SRE_FAST         0x00000010
// Drive Strength
//     IOMUXC_PAD_DSE_X1           0x00000000  (Weakest)
//     IOMUXC_PAD_DSE_X2           0x00000002
//     IOMUXC_PAD_DSE_X4           0x00000004
//     IOMUXC_PAD_DSE_X6           0x00000006  (Strongest)

&iomuxc {
	pinctrl_etnphy_int_b: etnphy-int-bgrp {
		fsl,pins = <
			    MX8MP_IOMUXC_SAI2_RXFS__GPIO4_IO21		0x90
		>;
	};

	pinctrl_etnphy_rst_b: etnphy-rst-bgrp {
		fsl,pins = <
			    MX8MP_IOMUXC_SAI2_RXC__GPIO4_IO22		0x140
		>;
	};

	pinctrl_eqos: eqosgrp {
		fsl,pins = <
			    MX8MP_IOMUXC_GPIO1_IO00__CCM_ENET_PHY_REF_CLK_ROOT 0x150
			    MX8MP_IOMUXC_ENET_MDC__ENET_QOS_MDC		0x142
			    MX8MP_IOMUXC_ENET_MDIO__ENET_QOS_MDIO	0x142
			    MX8MP_IOMUXC_ENET_TXC__CCM_ENET_QOS_CLOCK_GENERATE_TX_CLK 0x000
			    MX8MP_IOMUXC_ENET_TD0__ENET_QOS_RGMII_TD0	0x016
			    MX8MP_IOMUXC_ENET_TD1__ENET_QOS_RGMII_TD1	0x016
			    MX8MP_IOMUXC_ENET_TD2__ENET_QOS_RGMII_TD2	0x016
			    MX8MP_IOMUXC_ENET_TD3__ENET_QOS_RGMII_TD3	0x016
			    MX8MP_IOMUXC_ENET_RD0__ENET_QOS_RGMII_RD0	0x150
			    MX8MP_IOMUXC_ENET_RD1__ENET_QOS_RGMII_RD1	0x150
			    MX8MP_IOMUXC_ENET_RD2__ENET_QOS_RGMII_RD2	0x150
			    MX8MP_IOMUXC_ENET_RD3__ENET_QOS_RGMII_RD3	0x150
			    MX8MP_IOMUXC_ENET_RXC__CCM_ENET_QOS_CLOCK_GENERATE_RX_CLK 0x116
			    MX8MP_IOMUXC_ENET_RX_CTL__ENET_QOS_RGMII_RX_CTL 0x156
			    MX8MP_IOMUXC_ENET_TX_CTL__ENET_QOS_RGMII_TX_CTL 0x016
		>;
	};

	pinctrl_eqos_sleep: eqos-sleep-grp {
		fsl,pins = <
			    MX8MP_IOMUXC_GPIO1_IO00__GPIO1_IO00		0x120
			    MX8MP_IOMUXC_ENET_MDC__GPIO1_IO16		0x120
			    MX8MP_IOMUXC_ENET_MDIO__GPIO1_IO17		0x120
			    MX8MP_IOMUXC_ENET_TXC__GPIO1_IO23		0x120
			    MX8MP_IOMUXC_ENET_TD0__GPIO1_IO21		0x120
			    MX8MP_IOMUXC_ENET_TD1__GPIO1_IO20		0x120
			    MX8MP_IOMUXC_ENET_TD2__GPIO1_IO19		0x120
			    MX8MP_IOMUXC_ENET_TD3__GPIO1_IO18		0x120
			    MX8MP_IOMUXC_ENET_RD0__GPIO1_IO26		0x120
			    MX8MP_IOMUXC_ENET_RD1__GPIO1_IO27		0x120
			    MX8MP_IOMUXC_ENET_RD2__GPIO1_IO28		0x120
			    MX8MP_IOMUXC_ENET_RD3__GPIO1_IO29		0x120
			    MX8MP_IOMUXC_ENET_RXC__GPIO1_IO25		0x120
			    MX8MP_IOMUXC_ENET_RX_CTL__GPIO1_IO24	0x120
			    MX8MP_IOMUXC_ENET_TX_CTL__GPIO1_IO22	0x120
		>;
	};

	pinctrl_expander_int: expander_int_gpiogrp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI2_TXFS__GPIO4_IO24		0x150 /* pull up, fast-slew */
		>;
	};

	pinctrl_status_led: status_ledgrp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI2_RXD0__GPIO4_IO23		0x80
		>;
	};

	pinctrl_pcie: pciegrp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C4_SCL__PCIE_CLKREQ_B	0x61 /* open drain, external pull up */
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX8MP_IOMUXC_UART3_TXD__UART3_DCE_TX		0x140
			MX8MP_IOMUXC_UART3_RXD__UART3_DCE_RX		0x140
		>;
	};

    pinctrl_ecspi2: ecspi2grp {
		fsl,pins = <
			MX8MP_IOMUXC_ECSPI2_SS0__GPIO5_IO13			0x40156
			/* MX8MP_IOMUXC_ECSPI2_SS0__ECSPI2_SS0			0x82*/
			MX8MP_IOMUXC_ECSPI2_SCLK__ECSPI2_SCLK		0x82
			MX8MP_IOMUXC_ECSPI2_MOSI__ECSPI2_MOSI		0x82
			MX8MP_IOMUXC_ECSPI2_MISO__ECSPI2_MISO		0x82
		>;
	};

	pinctrl_ecspi1: ecspi1grp {
		fsl,pins = <
			MX8MP_IOMUXC_ECSPI1_SS0__GPIO5_IO09			0x156
			/* MX8MP_IOMUXC_ECSPI1_SS0__ECSPI1_SS0			0x82*/
			MX8MP_IOMUXC_ECSPI1_SCLK__ECSPI1_SCLK		0x82
			MX8MP_IOMUXC_ECSPI1_MOSI__ECSPI1_MOSI		0x82
			MX8MP_IOMUXC_ECSPI1_MISO__ECSPI1_MISO		0x82
		>;
	};
};

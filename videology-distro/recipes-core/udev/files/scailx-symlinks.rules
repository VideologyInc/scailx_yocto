# vim: ft=udevrules

SUBSYSTEM!="i2c-dev|tty|spidev", GOTO="scailx_symlinks_end"
# allow declaring a symlink for a device in DT using symlink = "mylink" property.
ATTR{device/of_node/symlink}!="", ENV{DEVNAME}!="", ENV{OF_SYMLINK}+="%s{device/of_node/symlink}", SYMLINK+="%s{device/of_node/symlink}", TAG+="systemd"

# create a symlink for each /proc/device-tree/alias entry that matches our of-node, skipping if it matches the first alias
ACTION=="add|change", KERNEL!="ptyp[0-9]*", KERNEL!="tty[0-9]*", SUBSYSTEM=="i2c-dev|tty|spidev", PROGRAM+="/bin/sh -c '         \
    TTYNODE=$$(readlink $sys$devpath/device/of_node | sed 's/base/:/' | cut -d: -f2); \
    aliases=$$(ls /proc/device-tree/aliases/* | sed s@.*/@@ | awk \"!/(^i2c|^can|^serial)[0-9]/\"); \
    ret=0;                                                                            \
    for alias in $$aliases; do                                                        \
        if [ \"$$TTYNODE\" = \"$$(strings /proc/device-tree/aliases/$$alias)\" ]; then  \
            echo links/$$alias;                                                       \
            ret=1;                                                                    \
        fi;                                                                           \
    done;                                                                             \
'", ENV{OF_SYMLINK}+="%c", SYMLINK+="%c", TAG+="systemd"

# create a namefile for i2c devices to use them easily with i2ctools
SUBSYSTEM=="i2c-dev", ENV{OF_SYMLINK}!="", RUN+="/bin/sh -c '       \
    mkdir -p /dev/i2c_names;                                        \
    for f in $$OF_SYMLINK; do                                       \
        echo $attr{name} > /dev/i2c_names/$$(basename $$f);         \
    done;                                                           \
'"
LABEL="scailx_symlinks_end"